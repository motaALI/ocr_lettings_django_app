version: 2.1

jobs:
  build:
    docker:
      - image: cimg/python:3.8
    working_directory: /home/circleci/project
    steps:
      - checkout

      # Install Python dependencies
      - run:
          name: Install Python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      # Install system dependencies
      - run:
          name: Install system dependencies
          command: |
            sudo apt-get update && \
            sudo apt-get -y install python3-venv docker-compose docker.io containerd

      # Verify Docker installation
      - run:
          name: Verify Docker installation
          command: docker --version

      # Save Python dependencies cache
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"

      # Run pytest
      - run:
          name: Run pytest
          command: |
            . venv/bin/activate
            pytest

  deploy:
    docker:
      - image: cimg/python:3.6
    working_directory: /home/circleci/project
    steps:
      - checkout

      # Install AWS CLI
      - run:
          name: Install AWS CLI
          command: sudo apt-get -y install awscli

      # Set AWS credentials
      - run:
          name: Set AWS credentials
          command: |
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID && \
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY && \
            aws configure set region $AWS_REGION

      # Verify AWS configuration
      - run:
          name: Verify AWS configuration
          command: aws configure list

      - run:
          name: Debug Environment Variables
          command: |
            echo "DOCKERHUB_USERNAME: ${DOCKERHUB_USERNAME}"
            echo "CIRCLE_PROJECT_REPONAME: ${CIRCLE_PROJECT_REPONAME}"
            echo "CIRCLE_SHA1: ${CIRCLE_SHA1}"

      # Authenticate with Docker Hub using access token
      - run:
          name: Authenticate with Docker Hub
          command: echo "$DOCKER_PASSWORD" | docker login --username "$DOCKERHUB_USERNAME" --password-stdin

      # Install Docker
      - run:
          name: Install Docker
          command: |
            sudo apt-get update && \
            sudo apt-get install -y \
            apt-transport-https \
            ca-certificates \
            curl \
            gnupg-agent \
            software-properties-common && \
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg && \
            echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null && \
            sudo apt-get update && \
            sudo apt-get install -y docker-ce docker-ce-cli containerd.io

      # Build Docker image using Dockerfile from project directory
      - run:
          name: Build Docker image
          command: |
            docker build --tag ${DOCKERHUB_USERNAME}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1} .

      # Push Docker image to DockerHub
      - run:
          name: Push Docker image to DockerHub
          command: docker push ${DOCKERHUB_USERNAME}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1}

      # SSH into EC2 instance, pull the latest Docker image, and run Docker Compose
      - run:
          name: Deploy using Docker Compose
          command: |
            ssh -i ~/.ssh/${lettings_app_ec2_key} ubuntu@EC2_PUBLIC_IP 'docker pull ${DOCKERHUB_USERNAME}/${CIRCLE_PROJECT_REPONAME}:${CIRCLE_SHA1} && cd /home/ubuntu/${CIRCLE_PROJECT_REPONAME} && docker-compose up -d'

workflows:
  build_and_deploy_workflow:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - master
