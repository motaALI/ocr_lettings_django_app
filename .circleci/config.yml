version: 2.1

jobs:
  build:
    docker:
      - image: cimg/python:3.6

    working_directory: /home/circleci/project

    steps:
      - checkout

      # Install system dependencies including Docker and containerd
      - run:
          name: Install system dependencies
          command: |
            sudo apt-get update && \
            sudo apt-get -y install python3-venv docker.io containerd.io

      # Start Docker service
      - run:
          name: Start Docker service
          command: sudo service docker start

      # Verify Docker installation
      - run:
          name: Verify Docker installation
          command: docker --version

      # Restore Python dependencies cache
      - restore_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
      
      # Install Python dependencies
      - run:
          name: Install Python dependencies
          command: |
            python3 -m venv venv && \
            . venv/bin/activate && \
            pip install -r requirements.txt

      # Save Python dependencies cache
      - save_cache:
          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
          paths:
            - "venv"

      # Run pytest
      - run:
          name: Run pytest
          command: |
            . venv/bin/activate && \
            pytest

  deploy:
    docker:
      - image: cimg/python:3.6

    working_directory: /home/circleci/project

    steps:
      - checkout

      # Install system dependencies including Docker and containerd
      - run:
          name: Install system dependencies
          command: |
            sudo apt-get update && \
            sudo apt-get -y install docker.io containerd.io

      # Start Docker service
      - run:
          name: Start Docker service
          command: sudo service docker start

      # Build Docker image using Dockerfile from project directory
      - run:
          name: Build Docker image
          command: docker build -t lettings_app -f Dockerfile .

      # Deploy using Docker Compose 
      - run:
          name: Deploy using Docker Compose
          command: |
            scp -i ~/.ssh/${LETTINGS_APP_EC2_KEY} docker-compose.yml ubuntu@EC2_PUBLIC_IP:/home/ubuntu/lettings_app && \
            ssh -i ~/.ssh/${LETTINGS_APP_EC2_KEY} ubuntu@EC2_PUBLIC_IP 'cd /home/ubuntu/lettings_app && docker-compose up -d'

workflows:
  build_and_deploy_workflow:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - master
